# Category SQL queries
category.insert=INSERT INTO categories (category_code, category_description) VALUES (?, ?);
category.findById=SELECT category_id, category_code, category_description FROM categories WHERE category_id = ?;
category.findAll=SELECT category_id, category_code, category_description FROM categories;
category.exists=SELECT EXISTS (SELECT category_id FROM categories WHERE category_id = ?);

# Classroom SQL queries
classroom.insert=INSERT INTO classrooms (capacity) VALUES (?);
classroom.findById=SELECT classroom_id, capacity FROM classrooms WHERE classroom_id = ?;
classroom.findAll=SELECT classroom_id, capacity FROM classrooms;
classroom.exists=SELECT EXISTS (SELECT classroom_id FROM classrooms WHERE classroom_id = ?);

# Group SQL queries
group.insert=INSERT INTO groups (group_name) VALUES (?);
group.findById=SELECT group_id, group_name FROM groups WHERE group_id = ?;
group.findAll=SELECT group_id, group_name FROM groups;
group.exists=SELECT EXISTS (SELECT group_id FROM groups WHERE group_id = ?);

# Course SQL queries
course.insert=INSERT INTO courses (course_name, course_description, category_id, teacher_id) VALUES (?, ?, ?, ?);

course.findAll=SELECT course_id, course_name, course_description, c.teacher_id, t_first_name, t_last_name, \
               title, date_hired, c.category_id, category_code, category_description \
               FROM courses AS c INNER JOIN teachers AS t ON c.teacher_id = t.teacher_id \
               INNER JOIN categories AS ca ON c.category_id = ca.category_id;
               
course.findById=SELECT course_id, course_name, course_description, c.teacher_id, t_first_name, t_last_name, \
                title, date_hired, c.category_id, category_code, category_description \
                FROM courses AS c INNER JOIN teachers AS t ON c.teacher_id = t.teacher_id \
                INNER JOIN categories AS ca ON c.category_id = ca.category_id WHERE course_id = ?;
                
course.findByCategory=SELECT course_id, course_name, course_description, c.teacher_id, t_first_name, t_last_name, \
                      title, date_hired, c.category_id, category_code, category_description \
                      FROM courses AS c INNER JOIN teachers AS t ON c.teacher_id = t.teacher_id \
                      INNER JOIN categories AS ca ON c.category_id = ca.category_id WHERE c.category_id = ?;
                      
course.exists=SELECT EXISTS (SELECT course_id FROM courses WHERE course_id = ?);

# Student SQL queries
student.insert=INSERT INTO students (s_first_name, s_last_name, enrollment_date) VALUES (?, ?, ?);

student.findAll=SELECT s.student_id, s_first_name, s_last_name, enrollment_date, t.teacher_id, t_first_name, t_last_name, \
                title, date_hired, c.course_id, course_name, course_description, g.group_id, group_name, \
                ca.category_id, category_code, category_description \
                FROM students AS s LEFT OUTER JOIN groups AS g ON s.group_id = g.group_id \
                LEFT OUTER JOIN student_courses AS sc ON s.student_id = sc.student_id \
                LEFT OUTER JOIN courses AS c ON c.course_id = sc.course_id \
                LEFT OUTER JOIN categories AS ca ON ca.category_id = c.category_id \
                LEFT OUTER JOIN teachers AS t ON t.teacher_id = c.teacher_id;
                
student.findById=SELECT s.student_id, s_first_name, s_last_name, enrollment_date, t.teacher_id, t_first_name, t_last_name, \
                 title, date_hired, c.course_id, course_name, course_description, g.group_id, group_name, \
                 ca.category_id, category_code, category_description \
                 FROM students AS s LEFT OUTER JOIN groups AS g ON s.group_id = g.group_id \
                 LEFT OUTER JOIN student_courses AS sc ON s.student_id = sc.student_id \
                 LEFT OUTER JOIN courses AS c ON c.course_id = sc.course_id \
                 LEFT OUTER JOIN categories AS ca ON ca.category_id = c.category_id \
                 LEFT OUTER JOIN teachers AS t ON t.teacher_id = c.teacher_id WHERE s.student_id = ?;
                 
student.findForCourse=SELECT i.student_id, i.s_first_name, i.s_last_name, i.enrollment_date, i.teacher_id, i.t_first_name, \
                      i.t_last_name, i.title, i.date_hired, i.course_id, i.course_name, i.course_description, i.group_id, \
                      i.group_name, i.category_id, i.category_code, i.category_description \
                      FROM courses AS cr INNER JOIN (\
                        SELECT s.student_id, s_first_name, s_last_name, enrollment_date, t.teacher_id, t_first_name, t_last_name, \
                        title, date_hired, c.course_id, course_name, course_description, g.group_id, group_name, \
                        ca.category_id, category_code, category_description \
                        FROM students AS s LEFT OUTER JOIN groups AS g ON s.group_id = g.group_id \
                        LEFT OUTER JOIN student_courses AS sc ON s.student_id = sc.student_id \
                        LEFT OUTER JOIN courses AS c ON c.course_id = sc.course_id \
                        LEFT OUTER JOIN categories AS ca ON ca.category_id = c.category_id \
                        LEFT OUTER JOIN teachers AS t ON t.teacher_id = c.teacher_id \
                      ) AS i ON cr.course_id = i.course_id WHERE cr.course_id = ?;

student.findForGroup=SELECT s.student_id, s_first_name, s_last_name, enrollment_date, t.teacher_id, t_first_name, t_last_name, \
                     title, date_hired, c.course_id, course_name, course_description, g.group_id, group_name, \
                     ca.category_id, category_code, category_description \
                     FROM students AS s LEFT OUTER JOIN groups AS g ON s.group_id = g.group_id \
                     LEFT OUTER JOIN student_courses AS sc ON s.student_id = sc.student_id \
                     LEFT OUTER JOIN courses AS c ON c.course_id = sc.course_id \
                     LEFT OUTER JOIN categories AS ca ON ca.category_id = c.category_id \
                     LEFT OUTER JOIN teachers AS t ON t.teacher_id = c.teacher_id WHERE s.group_id = ?;
                     
student.addToCourse=INSERT INTO student_courses (student_id, course_id) VALUES (?, ?);

student.removeFromCourse=DELETE FROM student_courses WHERE student_id = ? AND course_id = ?;

student.addToGroup=UPDATE students SET group_id = ? WHERE student_id = ?;

student.removeFromGroup=UPDATE students SET group_id = NULL WHERE student_id = ?;

student.removeFromAllCourses=DELETE FROM student_courses WHERE student_id = ?;

student.exists=SELECT EXISTS (SELECT student_id FROM students WHERE student_id = ?);

student.deleteById=DELETE FROM students WHERE student_id = ?;
                      
# Teacher SQL queries
teacher.insert=INSERT INTO teachers (t_first_name, t_last_name, title, date_hired) VALUES (?, ?, ?, ?);

teacher.findAll=SELECT t.teacher_id, t_first_name, t_last_name, title, date_hired, cr.course_id, course_name, course_description, \
                ca.category_id, category_code, category_description \
                FROM teachers AS t LEFT OUTER JOIN courses AS cr ON t.teacher_id = cr.teacher_id \
                LEFT OUTER JOIN categories AS ca ON ca.category_id = cr.category_id;
                
teacher.findById=SELECT t.teacher_id, t_first_name, t_last_name, title, date_hired, cr.course_id, course_name, course_description, \
                 ca.category_id, category_code, category_description \
                 FROM teachers AS t LEFT OUTER JOIN courses AS cr ON t.teacher_id = cr.teacher_id \
                 LEFT OUTER JOIN categories AS ca ON ca.category_id = cr.category_id \
                 WHERE t.teacher_id = ?;
                 
teacher.findForCourse=SELECT t.teacher_id, t_first_name, t_last_name, title, date_hired, cr.course_id, course_name, course_description, \
                      ca.category_id, category_code, category_description \
                      FROM teachers AS t LEFT OUTER JOIN courses AS cr ON t.teacher_id = cr.teacher_id \
                      LEFT OUTER JOIN categories AS ca ON ca.category_id = cr.category_id \
                      WHERE cr.course_id = ?;
                      
teacher.exists=SELECT EXISTS (SELECT teacher_id FROM teachers WHERE teacher_id= ?)
                      
# Timetable SQL queries
timetable.insert=INSERT INTO timetables (start_date_time, duration, classroom_id, course_id, teacher_id) VALUES (?, ?, ?, ?, ?);

timetable.update=UPDATE timetables SET start_date_time = ?, duration = ?, classroom_id = ? \
                 WHERE timetable_id = ?;

timetable.findAll=SELECT timetable_id, start_date_time, duration, tm.classroom_id, tm.course_id, tm.teacher_id, \
                  t_first_name, t_last_name, title, date_hired, capacity, course_name, course_description, \
                  ca.category_id, category_code, category_description \
                  FROM timetables AS tm \
                  INNER JOIN classrooms AS cr ON tm.classroom_id = cr.classroom_id \
                  INNER JOIN teachers AS t ON tm.teacher_id = t.teacher_id \
                  INNER JOIN courses AS c ON tm.course_id = c.course_id \
                  INNER JOIN categories AS ca ON c.category_id = ca.category_id;
                  
timetable.findById=SELECT timetable_id, start_date_time, duration, tm.classroom_id, tm.course_id, tm.teacher_id, \
                   t_first_name, t_last_name, title, date_hired, capacity, course_name, course_description, \
                   ca.category_id, category_code, category_description \
                   FROM timetables AS tm \
                   INNER JOIN classrooms AS cr ON tm.classroom_id = cr.classroom_id \
                   INNER JOIN teachers AS t ON tm.teacher_id = t.teacher_id \
                   INNER JOIN courses AS c ON tm.course_id = c.course_id \
                   INNER JOIN categories AS ca ON c.category_id = ca.category_id \
                   WHERE timetable_id = ?;
                   
timetable.findForStudent=SELECT timetable_id, start_date_time, duration, tm.classroom_id, tm.course_id, tm.teacher_id, \
                         t_first_name, t_last_name, title, date_hired, capacity, course_name, course_description, \
                         ca.category_id, category_code, category_description \
                         FROM timetables AS tm \
                         INNER JOIN classrooms AS cr ON tm.classroom_id = cr.classroom_id \
                         INNER JOIN teachers AS t ON tm.teacher_id = t.teacher_id \
                         INNER JOIN courses AS c ON tm.course_id = c.course_id \
                         INNER JOIN categories AS ca ON c.category_id = ca.category_id \
                         INNER JOIN student_courses AS sc ON c.course_id = sc.course_id \
                         INNER JOIN students AS s ON sc.student_id = s.student_id \
                         WHERE s.student_id = ?;
                         
timetable.findForStudentDaily=SELECT timetable_id, start_date_time, duration, tm.classroom_id, tm.course_id, tm.teacher_id, \
                              t_first_name, t_last_name, title, date_hired, capacity, course_name, course_description, \
                              ca.category_id, category_code, category_description \
                              FROM timetables AS tm \
                              INNER JOIN classrooms AS cr ON tm.classroom_id = cr.classroom_id \
                              INNER JOIN teachers AS t ON tm.teacher_id = t.teacher_id \
                              INNER JOIN courses AS c ON tm.course_id = c.course_id \
                              INNER JOIN categories AS ca ON c.category_id = ca.category_id \
                              INNER JOIN student_courses AS sc ON c.course_id = sc.course_id \
                              INNER JOIN students AS s ON sc.student_id = s.student_id \
                              WHERE s.student_id = ? AND EXTRACT(DOY FROM start_date_time) = ?;
                              
timetable.findForStudentMonthly=SELECT timetable_id, start_date_time, duration, tm.classroom_id, tm.course_id, tm.teacher_id, \
                                t_first_name, t_last_name, title, date_hired, capacity, course_name, course_description, \
                                ca.category_id, category_code, category_description \
                                FROM timetables AS tm \
                                INNER JOIN classrooms AS cr ON tm.classroom_id = cr.classroom_id \
                                INNER JOIN teachers AS t ON tm.teacher_id = t.teacher_id \
                                INNER JOIN courses AS c ON tm.course_id = c.course_id \
                                INNER JOIN categories AS ca ON c.category_id = ca.category_id \
                                INNER JOIN student_courses AS sc ON c.course_id = sc.course_id \
                                INNER JOIN students AS s ON sc.student_id = s.student_id \
                                WHERE s.student_id = ? AND EXTRACT(MONTH FROM start_date_time) = ?;
                                
timetable.findForTeacher=SELECT timetable_id, start_date_time, duration, tm.classroom_id, tm.course_id, tm.teacher_id, \
                         t_first_name, t_last_name, title, date_hired, capacity, course_name, course_description, \
                         ca.category_id, category_code, category_description \
                         FROM timetables AS tm \
                         INNER JOIN classrooms AS cr ON tm.classroom_id = cr.classroom_id \
                         INNER JOIN teachers AS t ON tm.teacher_id = t.teacher_id \
                         INNER JOIN courses AS c ON tm.course_id = c.course_id \
                         INNER JOIN categories AS ca ON c.category_id = ca.category_id \
                         WHERE tm.teacher_id = ?;
                         
timetable.findForTeacherDaily=SELECT timetable_id, start_date_time, duration, tm.classroom_id, tm.course_id, tm.teacher_id, \
                              t_first_name, t_last_name, title, date_hired, capacity, course_name, course_description, \
                              ca.category_id, category_code, category_description \
                              FROM timetables AS tm \
                              INNER JOIN classrooms AS cr ON tm.classroom_id = cr.classroom_id \
                              INNER JOIN teachers AS t ON tm.teacher_id = t.teacher_id \
                              INNER JOIN courses AS c ON tm.course_id = c.course_id \
                              INNER JOIN categories AS ca ON c.category_id = ca.category_id \
                              WHERE tm.teacher_id = ? AND EXTRACT(DOY FROM start_date_time) = ?;
                              
timetable.findForTeacherMonthly=SELECT timetable_id, start_date_time, duration, tm.classroom_id, tm.course_id, tm.teacher_id, \
                                t_first_name, t_last_name, title, date_hired, capacity, course_name, course_description, \
                                ca.category_id, category_code, category_description \
                                FROM timetables AS tm \
                                INNER JOIN classrooms AS cr ON tm.classroom_id = cr.classroom_id \
                                INNER JOIN teachers AS t ON tm.teacher_id = t.teacher_id \
                                INNER JOIN courses AS c ON tm.course_id = c.course_id \
                                INNER JOIN categories AS ca ON c.category_id = ca.category_id \
                                WHERE tm.teacher_id = ? AND EXTRACT(MONTH FROM start_date_time) = ?;
                                
timetable.deleteById=DELETE FROM timetables WHERE timetable_id = ?;

timetable.exists=SELECT EXISTS (SELECT timetable_id FROM timetables WHERE timetable_id = ?);
                      
                      
                      
